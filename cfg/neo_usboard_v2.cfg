#!/usr/bin/env python

PACKAGE = "neo_usboard_v2"

from dynamic_reconfigure.parameter_generator_catkin import *


gen = ParameterGenerator()
gen.add("can_device", str_t, 0, "CAN device to use.", "None")

gen.add("serial_port", str_t, 0, "Serial port to use.", "/dev/ttyUSB0")
gen.add("topic_path", str_t, 0, "Topic path for the sensor data.", "/usboard_v2")

gen.add("serial_number", int_t, 0, "Serial number.", 0)
gen.add("hardware_version", int_t, 0, "Hardware version.", 0)

gen.add("can_id", int_t, 0, "CAN ID.", 0)
gen.add("can_baud_rate", int_t, 0, "CAN baud rate.", 0)
gen.add("update_rate", double_t, 0, "Update rate.", 0.0)

# Create array of parameters for active sensors
for i in range(16):
        gen.add("a_s" + str(i), bool_t, 0, "active_sensors_ " + str(i+1), False)
        gen.add("w_d" + str(i), double_t, 0, "warn_distance_ " + str(i+1), 0.0)
        gen.add("a_d" + str(i), double_t, 0, "alarm_distance_ " + str(i+1), 0.0)

for i in range(4):
        gen.add("ent_" + str(i), bool_t, 4, "Enable transmission.", False)
        gen.add("ft_" + str(i), int_t, 4, "Fire interval in ms.", 0)
        gen.add("sn_" + str(i), int_t, 4, "Sending sensor.", 0)
        gen.add("ee_" + str(i), bool_t, 4, "Cross echo mode.", False)


gen.add("low_pass_gain", double_t, 0, "Low pass gain.", 0.0)
gen.add("enable_analog_input", bool_t, 0, "Enable analog input.", False)
gen.add("enable_legacy_format", bool_t, 0, "Enable legacy format.", False)
gen.add("enable_can_termination", bool_t, 0, "Enable CAN termination.", False)
gen.add("relay_warn_blocked_invert", bool_t, 0, "Relay warning blocked invert.", False)
gen.add("relay_alarm_blocked_invert", bool_t, 0, "Relay alarm blocked invert.", False)

exit(gen.generate(PACKAGE, "neo_usboard_v2", "neo_usboard_v2"))
