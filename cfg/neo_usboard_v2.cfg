#!/usr/bin/env python

PACKAGE = "neo_usboard_v2"

from dynamic_reconfigure.parameter_generator_catkin import *


gen = ParameterGenerator()

gen.add("can_id", int_t, 0, "CAN ID.", 1024)
gen.add("can_baud_rate", int_t, 0, "CAN baud rate.", 1000000)
gen.add("update_rate", double_t, 0, "Update rate.", 2.0)

# Create array of parameters for active sensors
for i in range(16):
        gen.add("active_sensor_" + str(i), bool_t, 0, "active_sensor_ " + str(i+1), True)
        gen.add("warn_distance_" + str(i), double_t, 0, "warn_distance_ " + str(i+1), 1.0)
        gen.add("alarm_distance_" + str(i), double_t, 0, "alarm_distance_ " + str(i+1), 0.3)

for i in range(4):
        gen.add("enable_transmission_" + str(i), bool_t, 4, "Enable transmission.", True)
        gen.add("fire_interval_ms_" + str(i), int_t, 4, "Fire interval in ms.", 20)
        gen.add("sending_sensor_" + str(i), int_t, 4, "Sending sensor.", 0)
        gen.add("cross_echo_mode_" + str(i), bool_t, 4, "Cross echo mode.", False)


gen.add("low_pass_gain", double_t, 0, "Low pass gain.", 1.0)
gen.add("enable_analog_input", bool_t, 0, "Enable analog input.", False)
gen.add("enable_legacy_format", bool_t, 0, "Enable legacy format.", False)
gen.add("enable_can_termination", bool_t, 0, "Enable CAN termination.", False)
gen.add("relay_warn_blocked_invert", bool_t, 0, "Relay warning blocked invert.", False)
gen.add("relay_alarm_blocked_invert", bool_t, 0, "Relay alarm blocked invert.", False)

exit(gen.generate(PACKAGE, "neo_usboard_v2", "neo_usboard_v2"))
